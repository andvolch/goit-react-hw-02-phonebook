{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","ContactForm","state","id","shortid","name","number","handleChange","e","currentTarget","value","setState","handleSubmint","preventDefault","props","submit","resetForm","this","className","s","container","onSubmit","form","type","pattern","title","required","onChange","button","Component","Filter","change","ContactList","contacts","onDeleteContact","list","map","item","text","onClick","App","dataBaseContacts","filter","deleteContact","contactId","prewState","contact","formSubmitHandler","contactic","some","toLowerCase","alert","changeFilter","getDisplayContacts","normalFilter","includes","displayContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c21c0ffb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__1zXG6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactList_container__eZUmA\",\"title\":\"ContactList_title__1s5MM\",\"list\":\"ContactList_list__2tR_3\",\"item\":\"ContactList_item__281Lg\",\"text\":\"ContactList_text__LJB1t\",\"number\":\"ContactList_number__1e2dl\",\"button\":\"ContactList_button__BT7X-\"};","import React, {Component} from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\n\r\nimport s from './ContactForm.module.css';\r\n\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        id: shortid(),\r\n        name: '',\r\n        number: '',\r\n    };\r\n\r\n    handleChange = e => {\r\n        const {name, value} = e.currentTarget;\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n        // this.setState({name: e.currentTarget.value})\r\n    }\r\n\r\n    handleSubmint = e => {\r\n        e.preventDefault();\r\n        this.props.submit(this.state);\r\n        this.resetForm();\r\n        \r\n\r\n    }\r\n\r\n    resetForm = () => {\r\n        this.setState({\r\n            name: '',\r\n            number: '',\r\n        })\r\n    }\r\n        \r\n    render () {\r\n       const {name, number} = this.state;\r\n        return (\r\n            <div className={s.container}>\r\n                <form onSubmit={this.handleSubmint} className={s.form}>\r\n                    <h3>Name</h3>\r\n                        <label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                value={name}\r\n                                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                                required\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </label>\r\n                    <h3>Number</h3>\r\n                        <label>\r\n                            <input\r\n                                type=\"tel\"\r\n                                name=\"number\"\r\n                                value={number}\r\n                                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                                required\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </label>\r\n                        <button type=\"submit\" className={s.button}>Add contact</button>\r\n                </form>\r\n                \r\n                \r\n            </div>\r\n        )\r\n    };\r\n    \r\n    \r\n}\r\nContactForm.propTypes = {\r\n    id: PropTypes.string,\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    submit: PropTypes.func.isRequired,\r\n    \r\n};\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({value, change}) => {\r\n    return (\r\n        <div className={s.container}>\r\n        <h3>Finde contacts by name</h3>\r\n            <label>\r\n                <input type=\"text\" value={value} onChange={change} />\r\n            </label>\r\n        </div>\r\n    )\r\n    \r\n};\r\n\r\n\r\nFilter.propTypes = {\r\n   value: PropTypes.string,\r\n   change: PropTypes.func.isRequired,\r\n   \r\n\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({contacts, onDeleteContact}) => \r\n    <div className={s.container}>\r\n        <ul className={s.list}>\r\n            {contacts.map(({id, name, number}) => (\r\n            <li key={id} className={s.item}>\r\n                <p className={s.text}>{name}:\r\n                    <span className={s.number}>{number}</span>\r\n                </p>\r\n                <button type=\"button\" className={s.button} onClick={() => onDeleteContact(id)}>delete</button> \r\n            </li>\r\n            ))}\r\n        </ul>\r\n    </div>\r\n\r\n\r\nContactList.propTypes ={\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        }),\r\n      ),\r\n    onDeleteContact: PropTypes.func,\r\n}\r\n\r\nexport default ContactList;","import React, { Component } from 'react';\n\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter'; \nimport ContactList from './components/ContactList/ContactList';\nimport dataBaseContacts from './data/contacts.json';\n\nclass App extends Component {\n  state = {\n    contacts: dataBaseContacts,\n    filter: '',\n  \n  } \n\n  deleteContact = contactId => {\n    this.setState(prewState => ({\n      contacts: prewState.contacts.filter(contact => contact.id !== contactId)\n    }))\n  }\n\n  \n  formSubmitHandler = contactic=> {\n    // console.log(contact);\n   \n    const check = this.state.contacts.some(contact => contact.name.toLowerCase() === contactic.name.toLowerCase());\n    \n      check ? alert(`${contactic.name} is already in contacts`)\n      : this.setState(({contacts}) => ({\n          contacts: [contactic, ...contacts],\n        }));\n\n  }\n\n  changeFilter = e => {\n    this.setState({filter: e.currentTarget.value})\n  }\n\n  getDisplayContacts = () => {\n    const {contacts, filter} = this.state;\n    const normalFilter = filter.toLowerCase();\n    \n    return contacts.filter(\n      contact => contact.name.toLowerCase().includes(normalFilter)\n    );\n  }\n\n  render () {\n    const {filter} = this.state;\n    const displayContacts = this.getDisplayContacts();\n\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm submit={this.formSubmitHandler}/>\n\n        <h2>Contacts</h2>\n        <Filter filter={filter} change={this.changeFilter}/>\n        <ContactList contacts={displayContacts} onDeleteContact={this.deleteContact}/>\n        \n      </div>)\n  }\n\n}\n\n\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactForm_container__32PXA\",\"form\":\"ContactForm_form__3LA6b\",\"title\":\"ContactForm_title__1wCh9\",\"list\":\"ContactForm_list__34Tsj\",\"item\":\"ContactForm_item__36Gn5\",\"text\":\"ContactForm_text__jBZFi\",\"number\":\"ContactForm_number__1ILLi\",\"button\":\"ContactForm_button__1YGgP\"};"],"sourceRoot":""}